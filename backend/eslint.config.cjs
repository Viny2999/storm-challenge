const eslintParser = require('@typescript-eslint/parser');

module.exports = {
  files: ['**/*.ts', '**/*.tsx'],
  languageOptions: {
    parser: eslintParser,
    parserOptions: {
      ecmaVersion: 'latest',
      sourceType: 'module',
      project: './tsconfig.json',
    },
  },
  rules: {
    curly: ['warn'],
    eqeqeq: ['error', 'always'],
    indent: ['error', 2],
    quotes: ['error', 'single'],
    strict: ['error', 'never'],
    'block-scoped-var': ['error'],
    'callback-return': ['error', ['done', 'proceed', 'next', 'onwards', 'callback', 'cb']],
    'comma-style': ['warn', 'last'],
    'eol-last': ['warn'],
    'handle-callback-err': ['error'],
    'linebreak-style': ['error', 'unix'],
    'no-dupe-keys': ['error'],
    'no-duplicate-case': ['error'],
    'no-extra-semi': ['warn'],
    'no-labels': ['error'],
    'no-mixed-spaces-and-tabs': [2, 'smart-tabs'],
    'no-redeclare': ['warn'],
    'no-sequences': ['error'],
    'no-unexpected-multiline': ['warn'],
    'no-unreachable': ['warn'],
    'no-use-before-define': ['error', { 'functions': false }],
    'one-var': ['warn', 'never'],
    'prefer-arrow-callback': ['warn', { 'allowNamedFunctions': true }],
    'semi-spacing': ['warn', { 'before': false, 'after': true }],
    'semi-style': ['warn', 'last'],
    'no-console': 'off',
    'no-throw-literal': 'error',
    'max-depth': ['error', 4],
    'max-nested-callbacks': ['error', 3],
    'max-statements': ['error', 30],
    'no-implicit-globals': 'error',
    'prefer-promise-reject-errors': 'error',
    'no-return-await': 'error',
    'no-duplicate-imports': 'error',
  }
};
